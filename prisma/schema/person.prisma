enum GenderType {
  male
  female
  other
  prefer_not_to_say
  unknown
  not_applicable
}

enum PhoneType {
  mobile
  home
  work
  emergency
  fax
  pager
  main
  other
}

enum IdentificationType {
  passport
  drivers_license
  national_id
  postal_id
  voters_id
  senior_citizen_id
  company_id
  school_id
}

type PersonalInfo {
  prefix          String? // Added: Mr., Ms., Dr., etc.
  firstName       String
  middleName      String? // Added: Middle name
  lastName        String
  dateOfBirth     DateTime?
  placeOfBirth    String?
  age             Int?
  nationality     String?
  primaryLanguage String?
  gender          GenderType?
  currency        String? // Added: Preferred currency (USD, EUR, etc.)
  vipCode         String? // Added: VIP status code
}

type Phone {
  type        PhoneType?
  countryCode String?
  number      String?
  isPrimary   Boolean?
}

type ContactAddress {
  street      String? // address1
  address2    String? // Added: Second address line
  city        String?
  state       String?
  country     String?
  postalCode  String?
  zipCode     String?
  houseNumber String?
}

type ContactInfo {
  email   String?
  phones  Phone[]
  fax     String? // Added: Separate fax field
  address ContactAddress?
}

type Identification {
  type           IdentificationType?
  number         String?
  issuingCountry String?
  expiryDate     DateTime?
}

type Metadata {
  isActive    Boolean   @default(true)
  status      String? // TODO: Define enum based on config.ENUMS.PERSON.PERSON_STATUS
  createdBy   String?   @db.ObjectId // Should reference a User id
  updatedBy   String?   @db.ObjectId // Should reference a User id
  lastLoginAt DateTime?
  isDeleted   Boolean   @default(false) // Moved from root
}

model Person {
  id             String          @id @default(auto()) @map("_id") @db.ObjectId
  organizationId String?         @db.ObjectId
  personalInfo   PersonalInfo?
  contactInfo    ContactInfo?
  identification Identification?
  metadata       Metadata?
  users User[]

  @@index([organizationId], name: "idx_person_organization")
  @@index([metadata.isDeleted], name: "idx_person_deleted")
  @@index([metadata.status], name: "idx_person_status")
  @@index([metadata.isActive], name: "idx_person_active")
  @@index([metadata.lastLoginAt], name: "idx_person_last_login")
  @@index([personalInfo.firstName], name: "idx_person_first_name")
  @@index([personalInfo.lastName], name: "idx_person_last_name")
  @@index([personalInfo.gender], name: "idx_person_gender")
  @@index([personalInfo.nationality], name: "idx_person_nationality")
  @@index([contactInfo.email], name: "idx_person_email")
  @@index([identification.type], name: "idx_person_id_type")
  @@index([identification.number], name: "idx_person_id_number")
  @@index([organizationId, metadata.isDeleted], name: "idx_person_org_deleted")
  @@index([organizationId, metadata.status], name: "idx_person_org_status")
  @@index([metadata.isDeleted, metadata.status], name: "idx_person_deleted_status")
}
