enum Role {
  superadmin
  viewer
  admin
  onebis_test
  dms_user
  dms_viewer
  dms_admin
  dms_ttlock_user
  dms_ttlock_viewer
  dms_ttlock_admin
  dms_hr_user
  dms_hr_viewer
  dms_hr_admin
  dms_grms_user
  dms_grms_viewer
  dms_grms_admin
  guest
}

enum SubRole {
  staff
  guard
  vendor
  operator
  manager
  guest
}

enum Status {
  active
  inactive
  suspended
  archived
}

model User {
  id                  String               @id @default(auto()) @map("_id") @db.ObjectId
  personId            String               @db.ObjectId
  person              Person               @relation(fields: [personId], references: [id], onDelete: Cascade)
  avatar              String?
  userName            String               @unique
  email               String               @unique
  password            String?
  role                Role
  subRole             SubRole?
  organization        Organization?        @relation(fields: [organizationId], references: [id], onDelete: SetNull)
  organizationId      String?              @db.ObjectId
  status              Status               @default(active)
  isDeleted           Boolean              @default(false)
  lastLogin           DateTime?
  loginMethod         String
  createdAt           DateTime             @default(now())
  updatedAt           DateTime             @updatedAt

  @@index([role], name: "idx_user_role")
  @@index([status], name: "idx_user_status")
  @@index([organizationId], name: "idx_user_organization")
  @@index([personId], name: "idx_user_person")
  @@index([isDeleted], name: "idx_user_deleted")
  @@index([lastLogin], name: "idx_user_last_login")
  @@index([createdAt], name: "idx_user_created_at")
  @@index([role, status], name: "idx_user_role_status")
  @@index([organizationId, status], name: "idx_user_org_status")
  @@index([organizationId, role], name: "idx_user_org_role")
  @@index([isDeleted, status], name: "idx_user_deleted_status")
}
